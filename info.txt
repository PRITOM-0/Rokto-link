Username: admin

Password: password


Guide to Using the Blood Donation Management Website
This guide will walk you through setting up your local environment, configuring the database, deploying the website files, and then navigating its various features.

1. Prerequisites: Local Server Environment
To run this PHP and MySQL-based website, you need a local server environment. The most common options are:

XAMPP: For Windows, Linux, and macOS.

WAMP: For Windows.

MAMP: For macOS.

Choose one, download, and install it. These packages provide Apache (web server), MySQL (database), and PHP (scripting language) bundled together.

2. Database Setup
This is the most crucial step to get your website working.

Start Your Local Server:

Open the control panel for XAMPP/WAMP/MAMP.

Start the Apache and MySQL services. Ensure they are running without errors (usually indicated by green status).

Access phpMyAdmin:

Open your web browser.

Go to http://localhost/phpmyadmin (or http://127.0.0.1/phpmyadmin). This is the web interface for managing your MySQL databases.

Create the Database:

In phpMyAdmin, click on the "New" option in the left sidebar (or "Databases" at the top, then "Create database").

Enter blood_donation_db as the database name.

Click "Create".

Import the SQL Schema:

Select the newly created blood_donation_db from the left sidebar.

Click on the "SQL" tab at the top.

Copy the entire content from the Updated Blood Donation Database Schema (SQL) immersive (the first code block provided to you).

Paste the copied SQL code into the large text area.

Click the "Go" button (usually at the bottom right).

You should see a success message indicating that the tables, view, trigger, and sample data have been created.

3. File Setup
Now, you need to place the website files in the correct location for your web server to serve them.

Locate Your Web Server's Document Root:

XAMPP: C:\xampp\htdocs (Windows) or /Applications/XAMPP/htdocs (macOS).

WAMP: C:\wamp\www.

MAMP: /Applications/MAMP/htdocs.

Create Website Folder:

Inside the document root (e.g., htdocs), create a new folder named blood_donation_website.

Place Files:

Copy all the PHP files (config.php, login.php, logout.php, index.php, process_form.php, dashboard.php, search.php, donors.php, recipients.php) and the style.css file into the blood_donation_website folder.

4. Running the Application
Ensure Server is Running: Double-check that Apache and MySQL services are still running in your XAMPP/WAMP/MAMP control panel.

Access the Website:

Open your web browser.

Navigate to: http://localhost/blood_donation_website/index.php

You should now see the landing page of your Blood Donation Management website!

5. Website Navigation and Features
5.1. Landing Page (index.php)
This is the public-facing page of your website.

Sections: It includes "Home" (Hero section), "Information" (Why Donate Blood), "Features" (What the system offers), "Top Needed Blood Groups", "Recent Donors", "Recent Donation History", and "Contact" sections.

Navigation Bar: Provides links to different sections and a direct link to the "Dashboard".

Dynamic Data: The "Top Needed Blood Groups", "Recent Donors", and "Recent Donation History" sections dynamically display data fetched from your database.

Contact Form: A simple form to simulate sending a message. Submitting it will lead to process_form.php which gives a success message.

5.2. Login Page (login.php)
This page is automatically displayed when you try to access the dashboard without being logged in.

Access: You can reach it by clicking "Dashboard" on the landing page or directly by going to http://localhost/blood_donation_website/login.php.

Credentials:

Username: admin

Password: password

Purpose: Authenticates users to access the administrative dashboard.

5.3. Dashboard (dashboard.php)
This is the administrative control panel where you can manage all your blood donation data.

Access: After successfully logging in via login.php.

Overview: Displays tables for:

Blood Inventory: Shows current stock levels of each blood group.

Donors: Lists all registered donors.

Recipients: Lists all registered recipients.

Blood Requests: Shows current blood requests.

Donation History: Records of past donations.

Users: Manages user accounts for the dashboard itself.

CRUD Operations (Create, Read, Update, Delete):

Read: All data is displayed in tables.

Add: Click the "Add New..." button for any section. A modal form will appear. Fill in the details and submit.

Edit: Click the "Edit" button next to any record in the tables. A modal form will appear pre-filled with the record's data. Modify the fields and submit.

Delete: Click the "Delete" button next to any record. A JavaScript confirm dialog will appear (this is a simple browser pop-up, in a real production app you'd use a custom modal for better UX). Confirm to delete the record.

Inventory Update: The "Blood Inventory" section has a dedicated "Update Inventory" button to manually adjust stock levels.

Modals: The Add/Edit forms appear as pop-up modals for a smoother user experience. Click the 'X' button or outside the modal to close it.

5.4. Search Page (search.php)
This page allows you to perform advanced searches across different data tables.

Access: Click "Search" in the navigation bar or directly go to http://localhost/blood_donation_website/search.php.

Search Options:

Search In: Select which table you want to search (Donors, Blood Requests, Donation History, Blood Inventory).

Keyword Search: Enter a general keyword (e.g., name, email, hospital, notes) to search within the selected table.

Blood Group: Filter results by a specific blood group.

Request Status (for Blood Requests): Filter blood requests by their status (pending, fulfilled, urgent, cancelled). This filter only appears when "Blood Requests" is selected.

City (for Donors): Filter donors by city. This filter only appears when "Donors" is selected.

Performing a Search: Select your criteria and click "Search". Results will be displayed in a table below the form.

5.5. All Donors Page (donors.php)
Access: Click "All Donors" in the navigation bar or go to http://localhost/blood_donation_website/donors.php.

Purpose: Displays a comprehensive list of all donors in the system.

Filters: You can filter donors by name, blood group, and availability status.

5.6. All Recipients Page (recipients.php)
Access: Click "All Recipients" in the navigation bar or go to http://localhost/blood_donation_website/recipients.php.

Purpose: Displays a comprehensive list of all recipients in the system.

Filters: You can filter recipients by name, blood group, and hospital name.

5.7. Logout (logout.php)
Access: Click "Logout" in the dashboard's navigation bar.

Purpose: Terminates your session and redirects you back to the login page with a success message.

Important Notes:
Security: The provided code uses password_hash() for storing user passwords, which is a good practice. However, for a production environment, you would need to implement more robust security measures (e.g., input validation on all forms, protection against SQL injection and XSS, proper error logging, HTTPS).

Error Handling: Basic error messages are displayed. For a production system, you'd want more sophisticated error logging and user-friendly error pages.

Scalability: This is a simple, non-framework application. For larger, more complex systems, a framework (like Laravel, Symfony, CodeIgniter) would be highly recommended to manage complexity, improve security, and streamline development.

Trigger Logic: The trg_update_inventory_on_donation trigger automatically updates the blood_inventory and donors.last_donation_date when a new record is inserted into donation_history. Note that updating or deleting existing donation_history records does not automatically revert or adjust inventory in this simple setup; you'd need more complex trigger logic or application-level handling for that.